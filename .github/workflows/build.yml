# Build, check and LDView
# Trevor SANDY <trevor.sandy@gmail.com>
# Last Update: July 15, 2025
# Copyright (C) 2022 - 2025 by Trevor SANDY
#
name: Build LDView
on:
  push:
    branches:
      - lpub3d-build
jobs:
  build-linux:
    # if: ${{ false }} # uncomment to disable
    name: 'Build Ubuntu 24.04'
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Work Paths
        run: |
          echo "LDRAWDIR=${HOME}/ldraw" >> ${GITHUB_ENV}
          echo "LDV_DIST_DIR=lpub3d_linux_3rdparty" >> ${GITHUB_ENV}
          echo "LDV_DIST_DIR_CREATE=${HOME}/work/ldview/ldview/lpub3d_linux_3rdparty" >> ${GITHUB_ENV}
      - name: Development Packages
        run: |
          echo "Install development packages..."
          $(cd QT; sed -e '/libqt4-dev/d' -e '/qt5-base-dev/d' -e '/^#Qt/d' -e '/qt6-base/s/^#//' -i debian/control)
          chmod a+x QT/docker/install-devel-packages.sh && sudo ./QT/docker/install-devel-packages.sh
      - name: Cache LDraw
        id: cache-ldraw
        uses: actions/cache@v4
        with:
          path: ${{ env.LDRAWDIR }}
          key: ldraw-lib
      - name: LDraw Library
        run: |
          if [ ! -d ${LDRAWDIR}/parts ]; then
            echo "LDraw library not found at ${LDRAWDIR}. Downloading library..."
            curl -s -O https://library.ldraw.org/library/updates/complete.zip
            unzip -d ~/ -q complete.zip; rm complete.zip
            if test -d ${LDRAWDIR}; then echo "LDraw library extracted, LDRAWDIR defined."; fi
          else
            echo "LDraw library defined at ${LDRAWDIR}."
          fi
      - name: Stdlib Patch
        run: |
            echo "Apply stdlib error patch to LDViewGlobal.pri..."
            sed s/'    # detect system libraries paths'/'    # Suppress fatal error: stdlib.h: No such file or directory\n    QMAKE_CFLAGS_ISYSTEM = -I\n\n    # detect system libraries paths'/ -i LDViewGlobal.pri
      - name: Build LDView
        run: |
          if [ ! -d "${LDV_DIST_DIR_CREATE}" ]; then mkdir -p "${LDV_DIST_DIR_CREATE}" && echo "${LDV_DIST_DIR_CREATE} created."; fi
          qmake -v; $(cd QT ; sed -e 's/linguist-qt6, //g' -e 's/qt6-l10n-tools, //g' -i debian/control)
          qmake CONFIG+=3RD_PARTY_INSTALL=../${LDV_DIST_DIR} CONFIG+=release CONFIG+=BUILD_CUI_ONLY CONFIG+=NO_HEADERS_INSTALL CONFIG+=USE_SYSTEM_LIBS CONFIG+=BUILD_CHECK LDView.pro
          make && make install

  build-windows:
    # if: ${{ false }} # uncomment to disable
    name: 'Build Windows ${{ matrix.name }}'
    runs-on: ${{ matrix.runner-os }}
    strategy:
      fail-fast: false
      matrix:
        runner-os: [ windows-2025, windows-11-arm ]
        platform: [ AMD, ARM ]
        exclude:
          - runner-os: windows-2025
            platform: ARM
          - runner-os: windows-11-arm
            platform: AMD
        include:
          - runner-os: windows-2025
          - runner-os: windows-11-arm
          - platform: AMD
            name: 2025 AMD
            build: -all_amd
            toolset-32bit: v142
          - platform: ARM
            name: 11 ARM
            build: arm64
            toolset-32bit: v143
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Work Paths
        run: |
          Echo "LP3D_DIST_DIR_PATH=$(Join-Path (resolve-path ..\) 'lpub3d_windows_3rdparty')" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          Echo "LP3D_LDRAW_DIR_PATH=$(Join-Path (resolve-path $Env:USERPROFILE\) 'ldraw')" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          Echo "LP3D_3RD_PARTY_PATH=$(resolve-path ..\)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          If ( -Not (Test-Path -Path $(Join-Path (resolve-path ..\) 'lpub3d_windows_3rdparty') ) ) { New-Item -ItemType directory -Path $(Join-Path (resolve-path ..\) 'lpub3d_windows_3rdparty') }
      - name: Cache LDraw
        id: cache-ldraw
        uses: actions/cache@v4
        with:
          path: ${{ env.LP3D_LDRAW_DIR_PATH }}
          key: ldraw-lib
      - name: MSVC 141 Build Tools AMD
        if: "${{ matrix.platform == 'AMD' && matrix.toolset-32bit == 'v141' }}"
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $ComponentsToAdd= @("Microsoft.VisualStudio.Component.VC.${{ matrix.toolset-32bit }}.x86.x64")
          [string]$WorkloadArgs = $ComponentsToAdd | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$WorkloadArgs, '--quiet', '--norestart', '--nocache')
          # should be run twice
          $Process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          $Process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
        shell: powershell
      - name: Windows 8.1 SDK AMD
        if: "${{ matrix.platform == 'AMD' && matrix.toolset-32bit == 'v141' }}"
        run: |
          Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
          Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit"
        shell: powershell
      - name: Build LDView ${{ matrix.platform }}
        shell: cmd
        run: .\build.cmd ${{ matrix.build }} -chk -minlog
        env:
          LP3D_VSVERSION: 2022
          LP3D_VC32SDKVER: 10.0
          LP3D_MSC32_VER: 1942
          LP3D_VC32TOOLSET: ${{ matrix.toolset-32bit }}
          LP3D_VC32VARSALL_VER: -vcvars_ver=14.2
          LP3D_VC64SDKVER: 10.0
          LP3D_MSC64_VER: 1944
          LP3D_VC64TOOLSET: v143
          LP3D_VC64VARSALL_VER: -vcvars_ver=14.4
          LP3D_MSCARM64_VER: 1944
          LP3D_VCARM64SDKVER: 10.0
          LP3D_VCARM64TOOLSET: v143
          LP3D_VCARM64VARSALL_VER: -vcvars_ver=14.4

  build-macos:
    # if: ${{ false }} # uncomment to disable
    name: 'Build macOS ${{ matrix.runner-version }}'
    runs-on: macos-${{ matrix.runner-version }}
    strategy:
      fail-fast: false
      matrix:
        runner-version: [ 13, 14 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Work Paths
        run: |
          echo "LDRAWDIR=${HOME}/Library/ldraw" >> ${GITHUB_ENV}
          echo "LDV_DIST_DIR=lpub3d_macos_3rdparty" >> ${GITHUB_ENV}
          echo "LDV_DIST_DIR_CREATE=${HOME}/work/ldview/ldview/lpub3d_macos_3rdparty" >> ${GITHUB_ENV}
      - name: Development Packages
        run: |
          if [ "$(uname -m)" = "x86_64" ]; then
            echo "/usr/local/opt/ccache/libexec" >> ${GITHUB_PATH}
          else
            echo "/opt/homebrew/opt/ccache/libexec" >> ${GITHUB_PATH}
          fi
          echo "Install development packages..."
          brew install grep ccache gl2ps minizip qt@5
          brew link --force qt@5;
          if [[ -d /usr/X11/lib && /usr/X11/include ]]; then echo "Good to go - X11 found."; else brew install --cask xquartz; fi
      - name: Cache LDraw
        id: cache-ldraw
        uses: actions/cache@v4
        with:
          path: ${{ env.LDRAWDIR }}
          key: ldraw-lib
      - name: LDraw Library
        run: |
          if [ ! -d ${LDRAWDIR}/parts ]; then
            echo "LDraw library not found at ${LDRAWDIR}. Downloading library..."
            curl -s -O https://library.ldraw.org/library/updates/complete.zip
            unzip -d ~/Library -q complete.zip; rm complete.zip
            if test -d ${LDRAWDIR}; then echo "LDraw library extracted, LDRAWDIR defined."; fi
          fi
          echo "set LDRAWDIR in environment.plist..."
          chmod a+x QT/set-ldrawdir.command && sudo ./QT/set-ldrawdir.command
          grep -A1 -e 'LDRAWDIR' ~/.MacOSX/environment.plist
          echo "LDraw library defined at ${LDRAWDIR}."
      - name: Build macOS ${{ matrix.runner-version }}
        run: |
          if [ ! -d "${LDV_DIST_DIR_CREATE}" ]; then mkdir -p "${LDV_DIST_DIR_CREATE}" && echo "${LDV_DIST_DIR_CREATE} created."; fi
          qmake -v
          qmake CONFIG+=3RD_PARTY_INSTALL=../${LDV_DIST_DIR} CONFIG+=release CONFIG+=BUILD_CUI_ONLY CONFIG+=NO_HEADERS_INSTALL CONFIG+=USE_SYSTEM_LIBS CONFIG+=BUILD_CHECK CONFIG+=sdk_no_version_check
          make && make install
